{"version":3,"file":"TitledPicker.js","sourceRoot":"","sources":["../../../shared/components/TitledPicker.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,qDAAwC;AACxC,sDAAqD;AACrD,2CAA+B;AAC/B,6CAAsE;AAEtE,SAAS,YAAY,CAAC,EAgBrB;QAfC,KAAK,WAAA,EACL,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,KAAK,WAAA,EACL,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,QAAQ,cAAA;IAUR,IAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAI,KAAK,gBAAa,CAAC,CAAC,CAAC,KAAK,CAAC;IAE7D,OAAO,CACL,oBAAC,mBAAI,IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC;QACpC,oBAAC,iBAAC,IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,IAAG,WAAW,CAAK;QACvD,oBAAC,eAAM,IACL,aAAa,EAAE,KAAK,EACpB,OAAO,EAAE,CAAC,QAAQ,EAClB,aAAa,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,KAAG,KAAO,CAAC,EAApB,CAAoB,IAC3C,KAAK,CAAC,GAAG,CAAC,UAAC,EAAc;gBAAZ,GAAG,SAAA,EAAE,KAAK,WAAA;YAAO,OAAA,CAC7B,oBAAC,eAAM,CAAC,IAAI,IAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAI,CACpD;QAF8B,CAE9B,CAAC,CACK,CACJ,CACR,CAAC;AACJ,CAAC;AAmBQ,oCAAY;AAjBrB,IAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,SAAS,EAAE;QACT,aAAa,EAAE,KAAK;QACpB,UAAU,EAAE,QAAQ;QACpB,cAAc,EAAE,EAAE;QAClB,cAAc,EAAE,eAAe;KAChC;IACD,KAAK,EAAE;QACL,WAAW,EAAE,EAAE;KAChB;IACD,IAAI,EAAE;QACJ,cAAc,EAAE,EAAE;QAClB,QAAQ,EAAE,KAAK;QACf,gBAAgB,EAAE,EAAE;KACrB;CACF,CAAC,CAAC","sourcesContent":["import { B } from '@expo/html-elements';\nimport { Picker } from '@react-native-picker/picker';\nimport * as React from 'react';\nimport { StyleSheet, View, TextStyle, ViewStyle } from 'react-native';\n\nfunction TitledPicker({\n  style,\n  titleStyle,\n  title,\n  value,\n  setValue,\n  items,\n  disabled,\n}: {\n  style?: ViewStyle;\n  titleStyle?: TextStyle;\n  title?: string;\n  value: string;\n  items: { key: string; value: string }[];\n  disabled?: boolean;\n  setValue: (value: string) => void;\n}) {\n  const outputTitle = disabled ? `${title} (Disabled)` : title;\n\n  return (\n    <View style={[styles.container, style]}>\n      <B style={[styles.title, titleStyle]}>{outputTitle}</B>\n      <Picker\n        selectedValue={value}\n        enabled={!disabled}\n        onValueChange={value => setValue(`${value}`)}>\n        {items.map(({ key, value }) => (\n          <Picker.Item label={value} value={key} key={key} />\n        ))}\n      </Picker>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 12,\n    justifyContent: 'space-between',\n  },\n  title: {\n    marginRight: 12,\n  },\n  text: {\n    marginVertical: 15,\n    maxWidth: '80%',\n    marginHorizontal: 10,\n  },\n});\n\nexport { TitledPicker };\n"]}