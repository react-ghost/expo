{"version":3,"file":"SimpleActionDemo.js","sourceRoot":"","sources":["../../../shared/components/SimpleActionDemo.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAA0B;AAC1B,6CAOsB;AAEtB,+DAAyC;AACzC,uCAAsC;AAOtC,SAAS,gBAAgB,CAAC,KAA4B;IAAtD,iBAgCC;IA/BO,IAAA,KAAwB,eAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAA5C,OAAO,QAAA,EAAE,UAAU,QAAyB,CAAC;IAC9C,IAAA,KAAoB,eAAK,CAAC,QAAQ,CAAM,SAAS,CAAC,EAAjD,KAAK,QAAA,EAAE,QAAQ,QAAkC,CAAC;IAEzD,IAAM,SAAS,GAAG,eAAK,CAAC,WAAW,CAAC;;;;;oBAClC,UAAU,CAAC,IAAI,CAAC,CAAC;;;;oBAED,qBAAM,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAA;;oBAApC,UAAQ,SAA4B;oBAC1C,QAAQ,CAAC,OAAK,CAAC,CAAC;;;;oBAEhB,QAAQ,CAAC,OAAK,CAAC,CAAC;;;oBAElB,UAAU,CAAC,KAAK,CAAC,CAAC;;;;SACnB,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAEnB,IAAM,kBAAkB,GAAG,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC,IAAI,CAAC;IAEzF,OAAO,CACL,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,aAAa;QAC/B,8BAAC,+BAAgB,IAAC,OAAO,EAAE,SAAS;YAClC,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,mBAAmB;gBACrC,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,UAAU,IAAG,KAAK,CAAC,KAAK,CAAQ;gBACnD,OAAO,IAAI,8BAAC,gCAAiB,IAAC,KAAK,EAAE,MAAM,CAAC,qBAAqB,EAAE,IAAI,EAAE,EAAE,GAAI,CAC3E,CACU;QACnB,8BAAC,mBAAI,IAAC,KAAK,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAC1C,KAAK,KAAK,SAAS,IAAI,CACtB,8BAAC,mBAAQ,IAAC,cAAc,EAAE,kBAAkB,IAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAY,CAC1F,CACI,CACF,CACR,CAAC;AACJ,CAAC;AA2BQ,4CAAgB;AAzBzB,IAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,aAAa,EAAE;QACb,iBAAiB,EAAE,EAAE;QACrB,WAAW,EAAE,gBAAM,CAAC,MAAM;QAC1B,iBAAiB,EAAE,GAAG,GAAG,yBAAU,CAAC,GAAG,EAAE;KAC1C;IACD,mBAAmB,EAAE;QACnB,aAAa,EAAE,KAAK;QACpB,eAAe,EAAE,EAAE;KACpB;IACD,UAAU,EAAE;QACV,UAAU,EAAE,MAAM;QAClB,KAAK,EAAE,gBAAM,CAAC,SAAS;KACxB;IACD,qBAAqB,EAAE;QACrB,IAAI,EAAE,CAAC;QACP,aAAa,EAAE,KAAK;QACpB,cAAc,EAAE,UAAU;QAC1B,YAAY,EAAE,EAAE;KACjB;IACD,sBAAsB,EAAE;QACtB,WAAW,EAAE,gBAAM,CAAC,eAAe;KACpC;CACF,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport {\n  ActivityIndicator,\n  PixelRatio,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport { MonoText } from './MonoText';\n\ntype SimpleActionDemoProps = {\n  title: string;\n  action: (setValue: (value: any) => any) => any;\n};\n\nfunction SimpleActionDemo(props: SimpleActionDemoProps) {\n  const [loading, setLoading] = React.useState(false);\n  const [value, setValue] = React.useState<any>(undefined);\n\n  const runAction = React.useCallback(async () => {\n    setLoading(true);\n    try {\n      const value = await props.action(setValue);\n      setValue(value);\n    } catch (error) {\n      setValue(error);\n    }\n    setLoading(false);\n  }, [props.action]);\n\n  const monoContainerStyle = value instanceof Error ? styles.demoMonoContainerError : null;\n\n  return (\n    <View style={styles.demoContainer}>\n      <TouchableOpacity onPress={runAction}>\n        <View style={styles.demoHeaderContainer}>\n          <Text style={styles.demoHeader}>{props.title}</Text>\n          {loading && <ActivityIndicator style={styles.demoActivityIndicator} size={10} />}\n        </View>\n      </TouchableOpacity>\n      <View style={{ opacity: loading ? 0.4 : 1.0 }}>\n        {value !== undefined && (\n          <MonoText containerStyle={monoContainerStyle}>{JSON.stringify(value, null, 2)}</MonoText>\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  demoContainer: {\n    paddingHorizontal: 10,\n    borderColor: Colors.border,\n    borderBottomWidth: 1.0 / PixelRatio.get(),\n  },\n  demoHeaderContainer: {\n    flexDirection: 'row',\n    paddingVertical: 10,\n  },\n  demoHeader: {\n    fontWeight: 'bold',\n    color: Colors.tintColor,\n  },\n  demoActivityIndicator: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    paddingRight: 10,\n  },\n  demoMonoContainerError: {\n    borderColor: Colors.errorBackground,\n  },\n});\n\nexport { SimpleActionDemo };\n"]}