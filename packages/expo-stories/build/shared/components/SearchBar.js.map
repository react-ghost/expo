{"version":3,"file":"SearchBar.js","sourceRoot":"","sources":["../../../shared/components/SearchBar.tsx"],"names":[],"mappings":"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","sourcesContent":["import Ionicons from '@expo/vector-icons/build/Ionicons';\nimport React from 'react';\nimport { StyleSheet, TextInput, TextStyle, TouchableOpacity, View, Platform } from 'react-native';\n\nimport Colors from '../constants/Colors';\n\nfunction SearchBar({\n  selectionColor,\n  tintColor = Colors.tintColor,\n  placeholderTextColor = '#ccc',\n  underlineColorAndroid = '#ccc',\n  textColor,\n  onSubmit,\n  onChangeQuery,\n  initialValue = '',\n}: {\n  initialValue?: string;\n  selectionColor?: string;\n  tintColor: string;\n  placeholderTextColor?: string;\n  underlineColorAndroid?: string;\n  textColor?: string;\n  onSubmit?: (query: string) => void;\n  onChangeQuery?: (query: string) => void;\n}) {\n  const [text, setText] = React.useState(initialValue);\n  const _textInput = React.useRef<TextInput>(null);\n\n  React.useEffect(() => {\n    requestAnimationFrame(() => {\n      _textInput.current?.focus();\n    });\n  }, []);\n\n  const _handleClear = () => {\n    _handleChangeText('');\n  };\n  const _handleChangeText = (text: string) => {\n    setText(text);\n    onChangeQuery?.(text);\n  };\n\n  const _handleSubmit = () => {\n    onSubmit?.(text);\n    _textInput.current?.blur();\n  };\n\n  const searchInputStyle: TextStyle = {};\n  if (textColor) {\n    searchInputStyle.color = textColor;\n  }\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        ref={_textInput}\n        placeholder=\"Search\"\n        placeholderTextColor={placeholderTextColor}\n        value={text}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        selectionColor={selectionColor}\n        underlineColorAndroid={underlineColorAndroid}\n        onSubmitEditing={_handleSubmit}\n        onChangeText={_handleChangeText}\n        style={[styles.searchInput, searchInputStyle]}\n      />\n      <View style={{ width: 50, alignItems: 'center', justifyContent: 'center' }}>\n        {text ? (\n          <TouchableOpacity\n            onPress={_handleClear}\n            hitSlop={{ top: 15, left: 10, right: 15, bottom: 15 }}\n            style={{ padding: 5 }}>\n            <Ionicons name=\"md-close\" size={25} color={tintColor} />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 18,\n    marginBottom: 2,\n    paddingLeft: Platform.select({ web: 16, default: 5 }),\n    marginRight: 5,\n    ...Platform.select({\n      web: {\n        outlineColor: 'transparent',\n      },\n      default: {},\n    }),\n  },\n});\n\nexport { SearchBar };\n"]}